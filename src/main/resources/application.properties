spring.application.name=restaurant_reservation_api

# Configuracion de la base de datos
# La primera linea es la cadena de conexion
spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db
spring.datasource.username=postgres
spring.datasource.password=a1b2c3d4e5
spring.datasource.driver-class-name=org.postgresql.Driver

# Propiedades de JPA/Hibernate
# Dialecto tiene que ver con el motor de base de datos
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# A partir de las entidades se define en el proyecto se cree las tablas y se actualizen
spring.jpa.hibernate.ddl-auto=update 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace
# Otras configuraciones (opcional)
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Configuracion del path base para los endpoints
server.servlet.context-path=/api/v1

# Clave secreta utilizada para firmar y verificar los tokens JWT. Debe mantenerse segura.
jwt.secret=chLhMF9w3mwDutysbQxsX8x4CGwZef4mayTGSmbAG2BUsXbYFKvXrVfnPCa62PJxp9TuHxx4PQAS2yGUTBAPy3Dy53j8Uj2wb2AQ3nK8VLg7tUx9HCzHATEp
# Tiempo de validez de los tokens JWT en segundos (30 dias).
jwt.validity-in-seconds=2592000

edteam.openapi.dev-url=http://localhost:8080/api/v1
edteam.openapi.prod-url=https://restaurant-reservation-api-kv05.onrender.com/api/v1

paypal.client-id=AfKL1-keHdFDPJG9PDHKyA0dZdyB6a_InN_V7CxIBAhWOlW5an8JTFv3LRP6D8lLA_6M2M1FmvxGEtWF
paypal.client-secret=EFXPE1iwDJFoHE_jVM532Akehi0JUer_65IS9ZDjHSoclxrDLlj69_ZYEt4lCgDWGCRB6aU4rdD8WhU4
paypal.api-base=https://api-m.sandbox.paypal.com
